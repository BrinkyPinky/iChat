//
//  ConversationModels.swift
//  iChat
//
//  Created by Егор Шилов on 05.09.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

typealias MessageCellViewModel = Conversation.Messages.ViewModel.MessageCellViewModel
typealias HeadersMessageCellViewModel = Conversation.Messages.ViewModel.HeadersMessageCellViewModel

enum Conversation {
    // MARK: Use cases
    
    enum userTitleLabel {
        struct Response {
            let fullname: String
            let isOnline: Bool
        }
        
        struct ViewModel {
            let fullname: String
            let isOnline: Bool
        }
    }
    
    enum Messages {
        struct Response {
            let rawMessages: [MessageModel]
        }
        
        struct ViewModel {
            struct MessageCellViewModel: CellIdentifiable {
                var cellIdentifier: String {
                    "OutgoingMessage"
                }
                
                let messageText: String?
                let messageDate: String?
                let isRead: Bool?
                let selfSender: Bool?
                let messageID: String
                
                init(message: MessageModel) {
                    messageText = message.messageText
                    messageDate = message.date
                    isRead = message.isRead
                    selfSender = message.selfSender
                    messageID = message.messageID
                }
            }
            
            struct HeadersMessageCellViewModel: CellIdentifiable {
                var cellIdentifier: String {
                    "MessageHeader"
                }
                
                let date: String?
                
                init(date: String) {
                    self.date = date
                }
                
            }
            
            let messagesRows: [[CellIdentifiable]]
            let headersDatesRows: [CellIdentifiable]
        }
    }
    
    enum SendMessage {
        struct Request {
            let messageText: String
        }
    }
    
    enum ReadMessage {
        struct Request {
            let displayingCell: CellIdentifiable
        }
    }
}
