//
//  SearchUserViewController.swift
//  iChat
//
//  Created by Егор Шилов on 01.09.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SearchUserDisplayLogic: AnyObject {
    func displaySomething(viewModel: SearchUser.Something.ViewModel)
}

class SearchUserViewController: UITableViewController, SearchUserDisplayLogic {
        
    var searchController = UISearchController()
    
    var interactor: SearchUserBusinessLogic?
    var router: (NSObjectProtocol & SearchUserRoutingLogic & SearchUserDataPassing)?
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        SearchUserConfigurator.shared.configure(view: self)
        
        doSomething()
        
        navigationItem.searchController = searchController
        searchController.searchResultsUpdater = self
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: Do something
    
    func doSomething() {
        let request = SearchUser.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: SearchUser.Something.ViewModel) {

    }
}

extension SearchUserViewController: UISearchResultsUpdating {
    func updateSearchResults(for searchController: UISearchController) {

    }
}

extension SearchUserViewController {
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        2
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "UserCell", for: indexPath)
        
        var configurator = cell.defaultContentConfiguration()
        configurator.text = "qew"
        cell.contentConfiguration = configurator
        
        return cell
    }
}
